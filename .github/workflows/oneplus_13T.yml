name: Android 12 GKI Kernel Builder
on:
  workflow_dispatch:
    inputs:
      KERNEL_SUFFIX:
        description: '内核名称修改(可改中文和emoji)'
        required: true
        default: '-酷安FutabaWa'
      KERNEL_TIME:
        description: "内核构建日期更改(默认为原厂)"
        required: true
        default: 'Tue Dec 17 23:36:49 UTC 2024'
      enable_feature_x:
        description: "是否启用kpm"
        required: false
        default: false
        type: boolean
      enable_feature_y:
        description: "是否启用lz4kd"
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # --- 新增步骤：最大化构建空间 ---
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          # 保留2GB根分区空间，其余清理。根据实际情况可以调整
          root-reserve-mb: 2048
          # 保留0.5GB临时空间
          temp-reserve-mb: 512
          # 移除大部分不需要的预安装软件包，这通常能释放大量空间
          remove-dotnet: 'true'
          remove-android: 'true' # GitHub Actions 默认安装的 Android SDK 很大，可以移除
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-swap: 'true' # 移除交换分区，进一步释放空间
          remove-tool-cache: 'true' # 清理工具缓存
          remove-packages: 'true' # 清理 apt 包缓存

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          # ccache 可以加速重复构建，但其缓存本身也占空间，这里暂时保留
          sudo apt install -y python3 git curl ccache build-essential flex bison libssl-dev libelf-dev bc
          # 清理 apt 缓存，因为之前 apt update/upgrade 可能会下载大量包
          sudo apt autoremove -y && sudo apt clean
          
      - name: Clone Common Kernel (5.10)
        run: |
          mkdir kernel_workspace
          cd kernel_workspace
          git clone https://github.com/tan666000/android_gki_kernel_5.10_common.git -b android12-5.10-2025-06 kernel_platform
          cd kernel_platform
          git checkout android12-5.10-2025-06
          
      - name: Set up SukiSU for 5.10
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
          
      - name: Set up susfs for 5.10
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android12-5.10
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch ./
          cp ../susfs4ksu/kernel_patches/fs/* ./fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch || true
          
      - name: Apply lz4kd Patches (条件执行)
        if: ${{ inputs.enable_feature_y }}
        run: |
          cd kernel_workspace/kernel_platform
          echo "应用lz4kd补丁..."
          # 这里添加实际的lz4kd补丁应用命令，例如 cp 相关文件或 patch
          # 示例：
          # cp ../path/to/lz4kd_patch.patch ./
          # patch -p1 < lz4kd_patch.patch || true
          
      - name: Generate initial config
        run: |
          cd kernel_workspace/kernel_platform
          make ARCH=arm64 gki_defconfig
          
      - name: Configure Kernel Options
        run: |
          cd kernel_workspace/kernel_platform
          # 使用KERNEL_SUFFIX参数
          sed -i "s/CONFIG_LOCALVERSION=.*/CONFIG_LOCALVERSION=\"${{ inputs.KERNEL_SUFFIX }}\"/" .config
          
          # 使用enable_feature_x参数启用KPM
          if [ "${{ inputs.enable_feature_x }}" = "true" ]; then
            ./scripts/config --enable CONFIG_KPM
            echo "已启用KPM功能"
          fi
          
          # 启用BBR
          ./scripts/config --enable CONFIG_TCP_CONG_BBR
          ./scripts/config --set-str CONFIG_DEFAULT_TCP_CONG "bbr"
          
          # 应用配置变更
          make ARCH=arm64 olddefconfig
          
      - name: Build Kernel
        run: |
          cd kernel_workspace/kernel_platform
          # 使用KERNEL_TIME参数
          export KBUILD_BUILD_TIMESTAMP="${{ inputs.KERNEL_TIME }}"
          
          # 获取Android 12专用Clang工具链
          # 这一步是导致空间不足的元凶，但必须执行
          git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 -b android12-release clang-5.10
          export CLANG_PATH=$(pwd)/clang-5.10/clang-r450784d/bin
          export PATH=${CLANG_PATH}:${PATH}
          
          # 开始构建
          make -j$(nproc) ARCH=arm64 CC=clang \
            CROSS_COMPILE=aarch64-linux-gnu- \
            LD=ld.lld \
            NM=llvm-nm
            
      - name: Package Kernel
        run: |
          cd kernel_workspace/kernel_platform
          # 创建AnyKernel3包
          git clone https://github.com/Kernel-SU/AnyKernel3.git
          cp arch/arm64/boot/Image.gz AnyKernel3/
          
          # 添加构建信息文件
          echo "构建参数:" > AnyKernel3/build-info.txt
          echo "KERNEL_SUFFIX: ${{ inputs.KERNEL_SUFFIX }}" >> AnyKernel3/build-info.txt
          echo "KERNEL_TIME: ${{ inputs.KERNEL_TIME }}" >> AnyKernel3/build-info.txt
          echo "启用KPM: ${{ inputs.enable_feature_x }}" >> AnyKernel3/build-info.txt
          echo "启用lz4kd: ${{ inputs.enable_feature_y }}" >> AnyKernel3/build-info.txt
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android12-GKI-Kernel
          path: kernel_workspace/kernel_platform/AnyKernel3/*
