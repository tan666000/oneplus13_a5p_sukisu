name: GKI Kernel Build # 工作流名称，您可以根据需要修改为更通用的名称
on:
  workflow_dispatch:
    inputs:
      KERNEL_SUFFIX:
        description: '内核名称修改(可改中文和emoji)'
        required: true
        default: '-酷安FutabaWa'
      KERNEL_TIME:
        description: "内核构建日期更改(默认为原厂)"
        required: true
        default: 'Tue Dec 17 23:36:49 UTC 2024'
      enable_feature_x:
        description: "是否启用kpm"
        required: false
        default: false
        type: boolean
      enable_feature_y:
        description: "是否启用lz4kd"
        required: false
        default: false
        type: boolean
      enable_feature_z:
        description: "是否添加风驰驱动"
        required: false
        default: false
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_DIR: /home/runner/.ccache
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "Futaba"
          git config --global user.email "3199167602@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          # 在这里添加了 binutils-aarch64-linux-gnu 包的安装
          sudo apt install -y python3 git curl ccache lld binutils-aarch64-linux-gnu

      - name: Restore ccache
        uses: actions/cache@v3
        with:
          path: /home/runner/.ccache
          key: ccache-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: tan666000/android_gki_kernel_5.10_common
          ref: android12-5.10-2025-06
          path: kernel_src # 将仓库签出到 kernel_src 目录

      - name: Checkout Clang Toolchain
        run: |
          git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r547379.git clang_toolchain

      - name: Set up SukiSU
        run: |
          cd kernel_src
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up susfs
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git

          cd kernel_src
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch ./
          cp ../susfs4ksu/kernel_patches/fs/* ./fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          #lz4k
          cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./include/linux
          cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./lib
          cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./crypto
          cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./lib/
          # Apply patches
          sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-android15-6.6.patch
          sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-android15-6.6.patch

          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch || true
          cp ../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          echo "完成"

      - name: Apply lz4kd Patches
        if: ${{inputs.enable_feature_y }}
        run: |
          cd kernel_src
          cp ../SukiSU_patch/other/zram/zram_patch/6.6/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_src
          echo "CONFIG_KSU=y" >> ./arch/arm64/configs/gki_defconfig

          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./arch/arm64/configs/gki_defconfig

          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./arch/arm64/configs/gki_defconfig

          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LOCALVERSION_AUTO=n" >> ./arch/arm64/configs/gki_defconfig

          #Remove check_defconfig
          sudo sed -i 's/check_defconfig//' ./build.config.gki
          git add -A && git commit -a -m "BUILD Kernel"

      - name: Add KPM Configuration Settings
        if: ${{inputs.enable_feature_x }}
        run: |
          cd kernel_src
          echo "CONFIG_KPM=y" >> ./arch/arm64/configs/gki_defconfig

          #Remove check_defconfig
          sudo sed -i 's/check_defconfig//' ./build.config.gki
          git add -A && git commit -a -m "BUILD Kernel"

      - name: Add make name
        run: |
          cd kernel_src
          sed -i 's/${scm_version}//' ./scripts/setlocalversion
          sudo sed -i 's/-4k/${{ github.event.inputs.KERNEL_SUFFIX }}/g' ./arch/arm64/configs/gki_defconfig

      - name: Add sched_ext
        if: ${{inputs.enable_feature_z }}
        run: |
          git clone https://github.com/HanKuCha/sched_ext.git # 克隆到工作区根目录
          cd kernel_src
          cp -r ../sched_ext/* ./kernel/sched

      - name: Build Kernel
        run: |
          export KBUILD_BUILD_TIMESTAMP="${{ github.event.inputs.KERNEL_TIME }}"
          # Clang 工具链路径已更新为新的克隆目录
          export PATH="$GITHUB_WORKSPACE/clang_toolchain/clang-r547379/bin:$PATH" # 这里指向新克隆的 Clang 路径
          export PATH="/usr/lib/ccache:$PATH"
          sudo apt install libelf-dev
          cd kernel_src
          make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang RUSTC=prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2 gki_defconfig all

      - name: Apply Linux Patch
        run: |
          cd kernel_src/out/arch/arm64/boot
          curl -LO https://github.com/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases/download/0.12.0/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image

      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git --depth=1
          rm -rf ./AnyKernel3/.git
          rm -rf ./AnyKernel3/push.sh
          cp kernel_src/out/arch/arm64/boot/Image ./AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: SuKiSu_${{ env.KSUVER }}_GKI_5.10 # 名称已修改以反映通用性
          path: ./AnyKernel3/*
